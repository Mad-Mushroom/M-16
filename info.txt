=== M-16 ===
------------


== Regs ==

0x01: A - General purpose
0x02: B - General purpose
0x03: C - General purpose
0x04: D - General purpose
0x05: I - Interrupt type
0x06: F - Carry, Negative flag


== Instructions ==

Instruction: 0x0000000000

0x00: NOP - nop                - No operation
0x01: HLT - hlt                - Halt the CPU
0x02: ADD - add a, 0x0001      - Adds Register by Value
0x03: ADR - add a, b           - Adds Register by Register
0x04: DEC - dec a, 0x0001      - Decrement Register by Value
0x05: DER - der a, b           - Decrement Register by Register
0x06: SET - set a, 0x0001      - Set Register to Value
0x07: JMP - jmp 0x00001        - Jump to other Part of Program
0x08: JMR - jmr a              - Jump with Address from Register
0x09: JMZ - jmz 0x0001         - Jump if zero
0x0A: JMO - jmo 0x0001         - Jump if overflow
0x0B: CMP - cmp a, 0x0001      - Compare Register to Value
0x0C: CMR - cmr a, b           - Compare Register to Register
0x0D: JE  - je 0x0001          - Jump if Compare succeeded
0x0E: INB - inb a              - Take Input
0x0F: OUB - oub 0x0001         - Output Value
0x10: OUR - our a              - Output Register
0x11: SIN - sin a              - Take Input from the second input
0x12: SOU - sou 0x0001         - Output Value on the second output
0x13: SOR - sor a              - Output Register on second output
0x14: MEM - mem a, 0x0001      - Store Register in RAM (Address by Value)
0x15: MER - mer a, b           - Store Register in RAM (Address by Register)
0x16: LEM - lem a, 0x0001      - Load Value from RAM (Address by Value)
0x17: LER - ler a, b           - Load Value from RAM (Address by Register)
0x18: VEM - vem 0x0001, 0x0001 - Store value in VRAM (Address by Value)
0x19: VER - ver 0x0001, a      - Store value in VRAM (Address by Register)
0x1A: VRM - vrm a, 0x0001      - Store Register in VRAM (Address by Value)
0x1B: VRR - vrr a, b           - Store Register in VRAM (Address by Register)
0x1C: RET - ret                - return back from the last jump
0x1D: INT - int 0x0001         - Set address to be jumped to if interrupt triggered

== ToDo ==

[X] info.txt
[X] Assembler
	[X] create project
	[X] file reading
	[X] parse
	[X] compile
	[X] output file
[*] Emulator
	[X] create project
	[ ] file reading
	[ ] parse hex file
	[ ] executing
	[ ] drawing vram
	[ ] I/O
[ ] Logisim
	[ ] create project
	[ ] main cuircut
	[ ] regs
	[ ] Instructions
		[ ] NOP
		[ ] HLT
		[ ] ADD
		[ ] ADR
		[ ] DEC
		[ ] DER
		[ ] SET
		[ ] JMP
		[ ] JMR
		[ ] JMZ
		[ ] JMO
		[ ] CMP
		[ ] CMR
		[ ] JE
		[ ] INB
		[ ] OUB
		[ ] OUR
		[ ] SIN
		[ ] SOU
		[ ] SOR
		[ ] MEM
		[ ] MER
		[ ] LEM
		[ ] LER
		[ ] VEM
		[ ] VER
		[ ] VRM
		[ ] VRR
		[ ] RET
		[ ] INT
		[ ] EXR
[*] GitHub
	[X] repo
	[X] first commit
	[X] license
	[ ] good readme
	[ ] wiki
[ ] Other
	[ ] Documentation
	[ ] Book (Manual)
[ ] Software
	[ ] OS
	[ ] Pong
